package oop4;

public class Product {

	String name;
	String maker;
	String category;
	int price;//가격
	double discountRate;//
	int stock;//재고량
	boolean isSoldOut;//
	
	Product(){}
	
	
	public Product(String name, String maker, String category, int price, double discountRate, int stock,
			boolean isSoldOut) {

		this.name = name;
		this.maker = maker;
		this.category = category;
		this.price = price;
		this.discountRate = discountRate;
		this.stock = stock;
		this.isSoldOut = isSoldOut;
	}
	public Product(String name, String maker, String category, int price, int stock) {

		this.name = name;
		this.maker = maker;
		this.category = category;
		this.price = price;
		this.stock = stock;

	}
	public Product(String name, String maker, String category, int price, int stock, double discountRate) {

		this.name = name;
		this.maker = maker;
		this.category = category;
		this.price = price;
		this.stock = stock;
		this.discountRate = discountRate;
	}
	


	void diplay() {
		System.out.println("-----------상품정보-------------");
		System.out.println("상품이름 :" + name);
		System.out.println("제조회사 :" + maker);
		System.out.println("카테고리 :" + category);
		System.out.println("판매가격 :" + price);
		System.out.println("할인비율 :" + discountRate);
		System.out.println("재 고 량 :" + stock);
		System.out.println("절판여부 :" + isSoldOut);
		System.out.println("-----------------------------");
	}
	void display2() {
		System.out.println("==============================================================");
		System.out.println("	상품이름	제조회사	카테고리	판매가격	할인비율	재고량	절판여부");
		System.out.println("==============================================================");
		System.out.print(name+"\t");
		System.out.print(maker+"\t");
		System.out.print(category+"\t");
		System.out.print(price+"\t");
		System.out.print(discountRate+"\t");
		System.out.print(stock+"\t");
		System.out.print(isSoldOut+"\t");
		System.out.println("---------------------------------------------------------------------");
	}


	public String getName() {
		return name;
	}


	public void setName(String name) {
		this.name = name;
	}


	public String getMaker() {
		return maker;
	}


	public void setMaker(String maker) {
		this.maker = maker;
	}


	public String getCategory() {
		return category;
	}


	public void setCategory(String category) {
		this.category = category;
	}


	public int getPrice() {
		return price;
	}


	public void setPrice(int price) {
		this.price = price;
	}


	public double getDiscountRate() {
		return discountRate;
	}


	public void setDiscountRate(double discountRate) {
		this.discountRate = discountRate;
	}


	public int getStock() {
		return stock;
	}


	public void setStock(int stock) {
		this.stock = stock;
	}


	public boolean isSoldOut() {
		return isSoldOut;
	}


	public void setSoldOut(boolean isSoldOut) {
		this.isSoldOut = isSoldOut;
	}
	
	
	
}





package oop4;

import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.Scanner;

public class ProductDemo {

	public static void main(String[] args) {
		
		
		Scanner sc = new Scanner(System.in);
		ProductService service = new ProductService();
		
		while(true) {
			
			System.out.println();
			System.out.println("		[상품 관리 프로그램]");
			System.out.println("================================================");
			System.out.println("=	1.조회	2.입고	3.출고	4.검색	0.종료   =");
			System.out.println("================================================");
			System.out.print("메뉴를 선택하세요 : ");
			
			int menuNo = sc.nextInt();
			
			//조회
			if(menuNo == 1) {
				
				service.printAllProduct();
	
			//입고
			}else if(menuNo == 2) {
								
				System.out.println();
				System.out.println();
				System.out.println();
				System.out.println("=====================================");
				System.out.println("=   1.신규상품   2.이월상품   3.재고추가  	    =");
				System.out.println("=====================================");
				
				System.out.print("메뉴를 선택하세요 :  ");
				int stockMenuNo = sc.nextInt();
				
				
				//신규상품
				if(stockMenuNo == 1) {
					
					System.out.println();
					System.out.println("신규 상품 입고 정보를 입력해주세요");
					System.out.print("상품명   :  ");
					String name = sc.next();
					System.out.print("제조사   :   ");
					String maker = sc.next();
					System.out.print("카테고리   :   ");
					String category = sc.next();
					System.out.print("가격   :   ");
					int price = sc.nextInt();
					System.out.print("입고량    :   ");
					int stock = sc.nextInt();
					
					Product product = new Product(name, maker, category, price, stock);
					service.insertProduct(product);
			
					
				//이월상품
				}else if(stockMenuNo == 2) {
					
					System.out.println();
					System.out.println("이월 상품 입고 정보를 입력해주세요");
					System.out.print("상품명   :  ");
					String name = sc.next();
					System.out.print("제조사   :   ");
					String maker = sc.next();
					System.out.print("카테고리   :   ");
					String category = sc.next();
					System.out.print("가격   :   ");
					int price = sc.nextInt();
					System.out.print("할인율 :   ");
					double discountRate = sc.nextDouble();
					System.out.print("입고량    :   ");
					int stock = sc.nextInt();
					//상품명, 제조사, 카테고리, 가격, 할인율, 입고량을 입력받아서 입고처리
					
					
					Product product = new Product(name, maker, category, stock, price, discountRate);
					service.insertProduct(product);
									
					
				//재고추가	
				}else if(stockMenuNo == 3) {
		
					
					System.out.println();
					System.out.print("재고 추가 정보를 입력해주세요 ");
					System.out.print("상품명   :  ");
					String name = sc.next();
					System.out.print("입고량    :   ");
					int amount = sc.nextInt();
					service.addProductStock(name, amount);
				}
				
				//출고
			}else if(menuNo == 3) {
				System.out.println();
				System.out.println("			[상품 출고 처리]");
				System.out.print("출고할 상품명을 입력해주세요 : ");
				String name = sc.next();
				System.out.print("출고량을 입력해주세요 : ");
				int amount = sc.nextInt();
				
				service.exportProduct(name, amount);
				
				//검색
			}else if(menuNo == 4) {
				
				System.out.println();
				System.out.println();
				System.out.println();
				System.out.println("		[상품 검색]");
				System.out.println("=============================================");
				System.out.println("=	1.이름	2.제조사	3.카테고리	4.가격	    =");
				System.out.println("=============================================");
				System.out.print("검색방식을 선택하세요 :  ");
				
				int searchMenuNo = sc.nextInt();
				
				
				//이름검색
				if(searchMenuNo == 1) {
					
					System.out.println();
					System.out.print("검색할 상품명을 입력하세요  : ");
					String name = sc.next();
					service.printProductsByName(name);
					
				
				//제조사검색	
				}else if(searchMenuNo == 2) {
					
					System.out.println();
					System.out.print("검색할 제조사 명을 입력하세요 : ");
					String maker = sc.next();
					service.printProductsByMaker(maker);
					
					
					//제조사를 입력받아서 상품 검색
					//제조사의 검색기능을 실행
					
//					service.printProductsByMaker(maker);
					
					
				//카테고리검색	
				}else if(searchMenuNo == 3) {
					
					System.out.println();
					System.out.print("검색할 카테고리 명을 입력하세요 : ");
					String category = sc.next();
					service.printProductsByCategory(category);
					//카테고리를 입력받아서 상품 검색
					//서비스의 카테고리 검색기능을 실행

//					service.printProductsByCategory(category);
					
				//가격 검색	
				}else if(searchMenuNo == 4) {
					
					System.out.println();
					System.out.print("검색할 최대가격을 입력하세요 : ");
					int maxPrice = sc.nextInt();
					System.out.print("검색할 최소가격을 입력하세요 : ");
					int minPrice = sc.nextInt();
					
					//최소가격과 최대가격 입력받아서 그 가격 범위내의 상품 검색
					//서비스의 가격 검색 기능을 실행
					
					service.printProductsByPrice(minPrice, maxPrice);
					
				}
							
				//종료
			}else if(menuNo == 0) {
				
				System.out.println("프로그램을 종료합니다.");
				System.exit(0);
				
			}else {
				System.out.println("올바르지 않은 접근입니다. 다시 메뉴를 입력해주세요");
			}
			
			
		}
		
	}

}




package oop4;

import java.util.Arrays;
import java.util.Collections;

import oop2.Banking;

public class ProductService {

	Product[] db = new Product[20];
	int savePosition = 0;
	boolean isExist;
	
	//배열에 저장된 모든 상품 정보를 출력한다.
	//전체조회
	void printAllProduct() {
	isExist = false;
	for(int i = 0; i < savePosition; i++) {
			Product product = db[i];
			if(!isExist) {
				System.out.println("입고된 상품이 없습니다.");	
			}else {
				product.diplay();
			}

		}
		
		
	}
	
	//상품 객체(새상품, 이월상품)을 전달받아서 배열에 저장한다.
	//상품검색
	
	
	//상품명과 입고량을 전달받아서 이미 배열에 저장된 상품의 재고량을 증가
	//입고
	void insertProduct(Product product) {
		
		db[savePosition] = product;
		isExist = true;
		savePosition++;
		
	//상품명과 출고량을 전달받아서 배열에서 해당상품을 찾아서 재고량을 감소
	//단, 재고량보다 출고량이 많은 경우 오류 메시지 출력
	//단, 재고량이 0이 되면 해당상품의 절판여부를 true로 설정
	}
	void addProductStock(String name, int amount) {
		
		for(int i = 0; i < savePosition; i++) {
			Product product = db[i];
			if(product.name.equals(name)) {
				product.stock += amount;
			}else {
				System.out.println("해당 상품이 없습니다.");
			}
		}
		
	}
	
	void exportProduct(String name, int amount) {
		
		for(int i = 0; i < savePosition; i++) {
			Product product = db[i];
			if(product.name.equals(name)) {
				if(product.stock < amount) {
					System.out.println("보유 재고가 적습니다.");
					System.out.println("요청 재고 ["+amount+"] ");
					System.out.println("현재 재고 ["+product.stock+"] ");
					System.out.println("부족 재고 ["+(product.stock - amount)+"] ");
				}else {
					System.out.println("출고를 완료하였습니다.");
					System.out.println("요청 재고["+amount+"] ");
					product.stock -= amount;
					System.out.println("남은 재고량 ["+product.stock+"] ");
				}
			}else {
				System.out.println("해당 상품이 없습니다.");			
			}
			if(product.stock == 0) {
				product.isSoldOut = true;
			}
		}
		
	}
	//상품명을 전달받아서 배열에서 상품명이 일치하는 상품정보 출력
	
	void printProductsByName(String name) {
		for(int i = 0; i < savePosition; i++) {
			Product product = db[i];
			if(product.name.equals(name)) {
				product.diplay();
			}else {
				System.out.println("해당 상품이 없습니다.");
			}
		}
		
	}
	//제조사 명을 전달받아서 배열에서 제조사명이 일치하는 상품정보 출력
	void printProductsByMaker(String maker) {
		for(int i = 0; i < savePosition; i++) {
			Product product = db[i];
			if(product.maker.equals(maker)) {
				product.diplay();
			}else {
				System.out.println("해당 제조사명과 일치하는 상품이 없습니다.");
			}
		}
		
	}
	//카테고리 명을 전달받아서 배열에서 카테고리명이 일치하는 상품정보 출력
	void printProductsByCategory(String category) {
		for(int i = 0; i < savePosition; i++) {
			Product product = db[i];
			if(product.category.equals(category)) {
				product.diplay();
			}else {
				System.out.println("해당 카테고리와 일치하는 상품명이 없습니다.");
			}
			
		}
	}
	//최저가격과 최고가격을 전달받아서 배열에서 해당 가격 범위에 속하는 상품 정보 출력
	void printProductsByPrice(int minPrice,  int maxPrice) {
				
		for(int i = 0; i < savePosition; i++) {
			Product product = db[i];
			if(minPrice < product.price && product.price < maxPrice){
				
				product.diplay();
				
			}else {
				System.out.println("해당하는 상품이 없습니다.");
			}
		}
		
	}
	
//	Product[] findNo(Product[] arr, int savePosition) {
//		Product[] products = null;
//		for(int i = 0; i < savePosition; i++) {
//			Product product = db[i];
//		
//		}
//		
//		
//		return products;
//		
//	}
	
	
}
